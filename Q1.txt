import csv
import sqlite3
from pathlib import Path
import csv
import sqlite3
from pathlib import Path

### extract data from CSV files
def extract_from_csv(files):
    data = []
    for file in files:
        with open(file, 'r', newline='') as csvfile:
            reader = csv.DictReader(csvfile)
            for row in reader:
                data.append(row)
    return data

### transform data
def transform_data(data):
    transformed_data = []
    for row in data:
        ### Calculate total price
        total_price = float(row['Quantity']) * float(row['UnitPrice'])
        
        ### Add total price to the row
        row['TotalPrice'] = total_price
        
        transformed_data.append(row)
    return transformed_data

#### load data into a SQLite database
def load_to_database(data, db_file):
    conn = sqlite3.connect(db_file)
    c = conn.cursor()
    
    ### Create table if not exists
    c.execute('''CREATE TABLE IF NOT EXISTS sales
                 (InvoiceNo TEXT, StockCode TEXT, Description TEXT, Quantity INTEGER, UnitPrice REAL, TotalPrice REAL)''')
    
    ### Insert data into the table
    for row in data:
        c.execute("INSERT INTO sales VALUES (?, ?, ?, ?, ?, ?)",
                  (row['InvoiceNo'], row['StockCode'], row['Description'], row['Quantity'], row['UnitPrice'], row['TotalPrice']))
    
    ### Commit changes and close connection
    conn.commit()
    conn.close()

### Define CSV files to ingest
csv_files = ['sales1.csv', 'sales2.csv']

### Extract data from CSV files
extracted_data = extract_from_csv(csv_files)

### Transform data
transformed_data = transform_data(extracted_data)

### Load data into a SQLite database
db_file = 'sales_database.db'
load_to_database(transformed_data, db_file)

print("ETL pipeline completed successfully!")
